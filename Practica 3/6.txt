En una playa hay 5 equipos de 4 personas cada uno (en total son 20 personas donde cada 
una conoce previamente a que equipo pertenece). Cuando las personas van llegando 
esperan con los de su equipo hasta que el mismo esté completo (hayan llegado los 4 
integrantes), a partir de ese momento el equipo comienza a jugar. El juego consiste en que 
cada integrante del grupo junta 15 monedas de a una en una playa (las monedas pueden ser 
de 1, 2 o 5 pesos) y se suman los montos de las 60 monedas conseguidas en el grupo. Al 
finalizar cada persona debe conocer el monto total juntado por su grupo. Nota: maximizar 
la concurrencia. Suponga que para simular la búsqueda de una moneda por parte de una 
persona existe una función Moneda() que retorna el valor de la moneda encontrada.


process Persona[id:0..19]{
    int equipo,sumMonedas=0,total;
    admin.esperarEquipo(equipo);
    for i= 1..15{
        sumMonedas=sumMonedas+Moneda();
    }
    juego[equipo].informarMisMonedas(sumMonedas);
    juego[equipo].obtenerTotal(total);
}

monitor admin{
    int integrantes[5]=([5] 0)
    cond barrera[5];
    procedure esperarEquipo(equipo: in int){
        integrantes[equipo]++;
        if(integrantes[equipo]<5){
            wait(barrera[equipo]);
        }
        else{
            signal_all(barrera[equipo]);
        }
    }
}

monitor juego[id:0..4]{

    int sumaTotal=0;
    int integrantesListo=0;
    cond todosListos;
    procedure informarMisMonedas(sumMonedas: in int){
        integrantesListo++;
        sumaTotal=sumaTotal+sumMonedas;
        if(integrantesListo==5){
            signal(todosListos);
        }
    }   

    procedure obtenerTotal(total:out int){
        if(integrantesListo!=5){
            wait(todosListos)
        }
        total=sumaTotal;
    } 
}